[{"/home/luis/Escritorio/telefonica2/nft_marketplace/src/index.js":"1","/home/luis/Escritorio/telefonica2/nft_marketplace/src/serviceWorker.js":"2","/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/App.js":"3","/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/MyPurchases.js":"4","/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/Create.js":"5","/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/MyListedItems.js":"6","/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/Home.js":"7","/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/Navbar.js":"8","/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/uriUtils.js":"9","/home/luis/Escritorio/telefonica3/nft_marketplace3/src/index.js":"10","/home/luis/Escritorio/telefonica3/nft_marketplace3/src/serviceWorker.js":"11","/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/App.js":"12","/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/MyPurchases.js":"13","/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/Create.js":"14","/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/Home.js":"15","/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/MyListedItems.js":"16","/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/Navbar.js":"17","/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/uriUtils.js":"18"},{"size":492,"mtime":1687807862321,"results":"19","hashOfConfig":"20"},{"size":4951,"mtime":1687807862321,"results":"21","hashOfConfig":"20"},{"size":2954,"mtime":1687810463685,"results":"22","hashOfConfig":"20"},{"size":2394,"mtime":1687822080064,"results":"23","hashOfConfig":"20"},{"size":3001,"mtime":1687811100861,"results":"24","hashOfConfig":"20"},{"size":3121,"mtime":1687822005045,"results":"25","hashOfConfig":"20"},{"size":2903,"mtime":1687821875405,"results":"26","hashOfConfig":"20"},{"size":1966,"mtime":1687807862321,"results":"27","hashOfConfig":"20"},{"size":176,"mtime":1687820584287,"results":"28","hashOfConfig":"20"},{"size":492,"mtime":1687807862321,"results":"29","hashOfConfig":"30"},{"size":4951,"mtime":1687807862321,"results":"31","hashOfConfig":"30"},{"size":2954,"mtime":1687810463685,"results":"32","hashOfConfig":"30"},{"size":2394,"mtime":1687822080064,"results":"33","hashOfConfig":"30"},{"size":3001,"mtime":1687811100861,"results":"34","hashOfConfig":"30"},{"size":2903,"mtime":1687821875405,"results":"35","hashOfConfig":"30"},{"size":3121,"mtime":1687822005045,"results":"36","hashOfConfig":"30"},{"size":1988,"mtime":1687864013445,"results":"37","hashOfConfig":"30"},{"size":176,"mtime":1687820584287,"results":"38","hashOfConfig":"30"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o9pysi",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"qibguf",{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"69"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"69"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"69"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"/home/luis/Escritorio/telefonica2/nft_marketplace/src/index.js",[],[],"/home/luis/Escritorio/telefonica2/nft_marketplace/src/serviceWorker.js",[],[],"/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/App.js",[],[],"/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/MyPurchases.js",["97"],[],"/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/Create.js",[],[],"/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/MyListedItems.js",["98"],[],"/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/Home.js",["99"],[],"/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/Navbar.js",[],[],"/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/uriUtils.js",[],[],"/home/luis/Escritorio/telefonica3/nft_marketplace3/src/index.js",[],[],[],"/home/luis/Escritorio/telefonica3/nft_marketplace3/src/serviceWorker.js",[],[],"/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/App.js",[],[],"/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/MyPurchases.js",["100"],[],"import { useState, useEffect } from 'react'\nimport { ethers } from \"ethers\"\nimport { Row, Col, Card } from 'react-bootstrap'\nimport { convertUriFormat } from './uriUtils.js';\n\nexport default function MyPurchases({ marketplace, nft, account }) {\n  const [loading, setLoading] = useState(true)\n  const [purchases, setPurchases] = useState([])\n  const loadPurchasedItems = async () => {\n    // Fetch purchased items from marketplace by quering Offered events with the buyer set as the user\n    const filter =  marketplace.filters.Bought(null,null,null,null,null,account)\n    const results = await marketplace.queryFilter(filter)\n    //Fetch metadata of each nft and add that to listedItem object.\n    const purchases = await Promise.all(results.map(async i => {\n      // fetch arguments from each result\n      i = i.args\n      // get uri url from nft contract\n      const newUri = await nft.tokenURI(i.tokenId)\n      const uri = convertUriFormat(newUri)\n      const response = await fetch(uri)\n      const metadata = await response.json()\n      // get total price of item (item price + fee)\n      const totalPrice = await marketplace.getTotalPrice(i.itemId)\n      // define listed item object\n      const imageUri = convertUriFormat(metadata.image) \n\n      let purchasedItem = {\n        totalPrice,\n        price: i.price,\n        itemId: i.itemId,\n        name: metadata.name,\n        description: metadata.description,\n        image: imageUri\n      }\n      return purchasedItem\n    }))\n    setLoading(false)\n    setPurchases(purchases)\n  }\n  useEffect(() => {\n    loadPurchasedItems()\n  }, [])\n  if (loading) return (\n    <main style={{ padding: \"1rem 0\" }}>\n      <h2>Loading...</h2>\n    </main>\n  )\n  return (\n    <div className=\"flex justify-center\">\n      {purchases.length > 0 ?\n        <div className=\"px-5 container\">\n          <Row xs={1} md={2} lg={4} className=\"g-4 py-5\">\n            {purchases.map((item, idx) => (\n              <Col key={idx} className=\"overflow-hidden\">\n                <Card>\n                  <Card.Img variant=\"top\" src={item.image} />\n                  <Card.Footer>{ethers.utils.formatEther(item.totalPrice)} ETH</Card.Footer>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </div>\n        : (\n          <main style={{ padding: \"1rem 0\" }}>\n            <h2>No purchases</h2>\n          </main>\n        )}\n    </div>\n  );\n}","/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/Create.js",[],[],"/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/Home.js",["101"],[],"import { useState, useEffect } from 'react'\nimport { ethers } from \"ethers\"\nimport { Row, Col, Card, Button } from 'react-bootstrap'\nimport { convertUriFormat } from './uriUtils.js';\n\nconst Home = ({ marketplace, nft }) => {\n  const [loading, setLoading] = useState(true)\n  console.log(nft)\n  console.log(marketplace)\n  const [items, setItems] = useState([])\n  const loadMarketplaceItems = async () => {\n    // Load all unsold items\n    const itemCount = await marketplace.itemCount()\n    let items = []\n    for (let i = 1; i <= itemCount; i++) {\n      const item = await marketplace.items(i)\n      console.log(items)\n      if (!item.sold) {\n        // get uri url from nft contract\n        const newUri = await nft.tokenURI(item.tokenId)\n        const uri = convertUriFormat(newUri)\n        const response = await fetch(uri)\n        const metadata = await response.json()\n        // get total price of item (item price + fee)\n        const totalPrice = await marketplace.getTotalPrice(item.itemId)\n        const imageUri = convertUriFormat(metadata.image) \n        // Add item to items array\n        items.push({\n          totalPrice,\n          itemId: item.itemId,\n          seller: item.seller,\n          name: metadata.name,\n          description: metadata.description,\n          image: imageUri\n        })\n      }\n    }\n    setLoading(false)\n    setItems(items)\n  }\n\n  const buyMarketItem = async (item) => {\n    await (await marketplace.purchaseItem(item.itemId, { value: item.totalPrice })).wait()\n    loadMarketplaceItems()\n  }\n\n  useEffect(() => {\n    loadMarketplaceItems()\n  }, [])\n  if (loading) return (\n    <main style={{ padding: \"1rem 0\" }}>\n      <h2>Loading...</h2>\n    </main>\n  )\n  return (\n    <div className=\"flex justify-center\">\n      {items.length > 0 ?\n        <div className=\"px-5 container\">\n          <Row xs={1} md={2} lg={4} className=\"g-4 py-5\">\n            {items.map((item, idx) => (\n              <Col key={idx} className=\"overflow-hidden\">\n                <Card>\n                  <Card.Img variant=\"top\" src={item.image} />\n                  <Card.Body color=\"secondary\">\n                    <Card.Title>{item.name}</Card.Title>\n                    <Card.Text>\n                      {item.description}\n                    </Card.Text>\n                  </Card.Body>\n                  <Card.Footer>\n                    <div className='d-grid'>\n                      <Button onClick={() => buyMarketItem(item)} variant=\"primary\" size=\"lg\">\n                        Buy for {ethers.utils.formatEther(item.totalPrice)} ETH\n                      </Button>\n                    </div>\n                  </Card.Footer>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </div>\n        : (\n          <main style={{ padding: \"1rem 0\" }}>\n            <h2>No listed assets</h2>\n          </main>\n        )}\n    </div>\n  );\n}\nexport default Home","/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/MyListedItems.js",["102"],[],"import { useState, useEffect } from 'react'\nimport { ethers } from \"ethers\"\nimport { Row, Col, Card } from 'react-bootstrap'\nimport { convertUriFormat } from './uriUtils.js';\n\nfunction renderSoldItems(items) {\n  return (\n    <>\n      <h2>Sold</h2>\n      <Row xs={1} md={2} lg={4} className=\"g-4 py-3\">\n        {items.map((item, idx) => (\n          <Col key={idx} className=\"overflow-hidden\">\n            <Card>\n              <Card.Img variant=\"top\" src={item.image} />\n              <Card.Footer>\n                For {ethers.utils.formatEther(item.totalPrice)} ETH - Recieved {ethers.utils.formatEther(item.price)} ETH\n              </Card.Footer>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </>\n  )\n}\n\nexport default function MyListedItems({ marketplace, nft, account }) {\n  const [loading, setLoading] = useState(true)\n  const [listedItems, setListedItems] = useState([])\n  const [soldItems, setSoldItems] = useState([])\n  const loadListedItems = async () => {\n    // Load all sold items that the user listed\n    const itemCount = await marketplace.itemCount()\n    let listedItems = []\n    let soldItems = []\n    for (let indx = 1; indx <= itemCount; indx++) {\n      const i = await marketplace.items(indx)\n      if (i.seller.toLowerCase() === account) {\n        // get uri url from nft contract\n        const newUri = await nft.tokenURI(i.tokenId)\n        const uri = convertUriFormat(newUri)\n        const response = await fetch(uri)\n        const metadata = await response.json()\n        // get total price of item (item price + fee)\n        const totalPrice = await marketplace.getTotalPrice(i.itemId)\n        // define listed item object\n        const imageUri = convertUriFormat(metadata.image) \n\n        let item = {\n          totalPrice,\n          price: i.price,\n          itemId: i.itemId,\n          name: metadata.name,\n          description: metadata.description,\n          image: imageUri\n        }\n        listedItems.push(item)\n        // Add listed item to sold items array if sold\n        if (i.sold) soldItems.push(item)\n      }\n    }\n    setLoading(false)\n    setListedItems(listedItems)\n    setSoldItems(soldItems)\n  }\n  useEffect(() => {\n    loadListedItems()\n  }, [])\n  if (loading) return (\n    <main style={{ padding: \"1rem 0\" }}>\n      <h2>Loading...</h2>\n    </main>\n  )\n  return (\n    <div className=\"flex justify-center\">\n      {listedItems.length > 0 ?\n        <div className=\"px-5 py-3 container\">\n            <h2>Listed</h2>\n          <Row xs={1} md={2} lg={4} className=\"g-4 py-3\">\n            {listedItems.map((item, idx) => (\n              <Col key={idx} className=\"overflow-hidden\">\n                <Card>\n                  <Card.Img variant=\"top\" src={item.image} />\n                  <Card.Footer>{ethers.utils.formatEther(item.totalPrice)} ETH</Card.Footer>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n            {soldItems.length > 0 && renderSoldItems(soldItems)}\n        </div>\n        : (\n          <main style={{ padding: \"1rem 0\" }}>\n            <h2>No listed assets</h2>\n          </main>\n        )}\n    </div>\n  );\n}","/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/Navbar.js",[],[],"/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/uriUtils.js",[],[],{"ruleId":"103","severity":1,"message":"104","line":42,"column":6,"nodeType":"105","endLine":42,"endColumn":8,"suggestions":"106"},{"ruleId":"103","severity":1,"message":"107","line":67,"column":6,"nodeType":"105","endLine":67,"endColumn":8,"suggestions":"108"},{"ruleId":"103","severity":1,"message":"109","line":49,"column":6,"nodeType":"105","endLine":49,"endColumn":8,"suggestions":"110"},{"ruleId":"103","severity":1,"message":"104","line":42,"column":6,"nodeType":"105","endLine":42,"endColumn":8,"suggestions":"111"},{"ruleId":"103","severity":1,"message":"109","line":49,"column":6,"nodeType":"105","endLine":49,"endColumn":8,"suggestions":"112"},{"ruleId":"103","severity":1,"message":"107","line":67,"column":6,"nodeType":"105","endLine":67,"endColumn":8,"suggestions":"113"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadPurchasedItems'. Either include it or remove the dependency array.","ArrayExpression",["114"],"React Hook useEffect has a missing dependency: 'loadListedItems'. Either include it or remove the dependency array.",["115"],"React Hook useEffect has a missing dependency: 'loadMarketplaceItems'. Either include it or remove the dependency array.",["116"],["117"],["118"],["119"],{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"120","fix":"126"},{"desc":"124","fix":"127"},{"desc":"122","fix":"128"},"Update the dependencies array to be: [loadPurchasedItems]",{"range":"129","text":"130"},"Update the dependencies array to be: [loadListedItems]",{"range":"131","text":"132"},"Update the dependencies array to be: [loadMarketplaceItems]",{"range":"133","text":"134"},{"range":"135","text":"130"},{"range":"136","text":"134"},{"range":"137","text":"132"},[1589,1591],"[loadPurchasedItems]",[2210,2212],"[loadListedItems]",[1589,1591],"[loadMarketplaceItems]",[1589,1591],[1589,1591],[2210,2212]]