{"ast":null,"code":"var _jsxFileName = \"/home/luis/Escritorio/NFT_marketplace/NFT-market/src/frontend/components/MyPurchases.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { ethers } from \"ethers\";\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { convertUriFormat } from './uriUtils.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyPurchases(_ref) {\n  _s();\n  let {\n    marketplace,\n    nft,\n    account\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  const [purchases, setPurchases] = useState([]);\n  const loadPurchasedItems = async () => {\n    // Fetch purchased items from marketplace by quering Offered events with the buyer set as the user\n    const filter = marketplace.filters.Bought(null, null, null, null, null, account);\n    const results = await marketplace.queryFilter(filter);\n    //Fetch metadata of each nft and add that to listedItem object.\n    const purchases = await Promise.all(results.map(async i => {\n      // fetch arguments from each result\n      i = i.args;\n      // get uri url from nft contract\n      const newUri = await nft.tokenURI(i.tokenId);\n      const uri = convertUriFormat(newUri);\n      const response = await fetch(uri);\n      const metadata = await response.json();\n      // get total price of item (item price + fee)\n      const totalPrice = await marketplace.getTotalPrice(i.itemId);\n      // define listed item object\n      const imageUri = convertUriFormat(metadata.image);\n      let purchasedItem = {\n        totalPrice,\n        price: i.price,\n        itemId: i.itemId,\n        name: metadata.name,\n        description: metadata.description,\n        image: imageUri\n      };\n      return purchasedItem;\n    }));\n    setLoading(false);\n    setPurchases(purchases);\n  };\n  useEffect(() => {\n    loadPurchasedItems();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"main\", {\n    style: {\n      padding: \"1rem 0\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center\",\n    children: purchases.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-5 container\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 2,\n        lg: 4,\n        className: \"g-4 py-5\",\n        children: purchases.map((item, idx) => /*#__PURE__*/_jsxDEV(Col, {\n          className: \"overflow-hidden\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: item.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              children: [ethers.utils.formatEther(item.totalPrice), \" ETH\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"main\", {\n      style: {\n        padding: \"1rem 0\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No purchases\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(MyPurchases, \"+bT9nvXJXwVwMkewhHc+Eyc0m60=\");\n_c = MyPurchases;\nvar _c;\n$RefreshReg$(_c, \"MyPurchases\");","map":{"version":3,"names":["useState","useEffect","ethers","Row","Col","Card","convertUriFormat","jsxDEV","_jsxDEV","MyPurchases","_ref","_s","marketplace","nft","account","loading","setLoading","purchases","setPurchases","loadPurchasedItems","filter","filters","Bought","results","queryFilter","Promise","all","map","i","args","newUri","tokenURI","tokenId","uri","response","fetch","metadata","json","totalPrice","getTotalPrice","itemId","imageUri","image","purchasedItem","price","name","description","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","xs","md","lg","item","idx","Img","variant","src","Footer","utils","formatEther","_c","$RefreshReg$"],"sources":["/home/luis/Escritorio/NFT_marketplace/NFT-market/src/frontend/components/MyPurchases.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { ethers } from \"ethers\"\nimport { Row, Col, Card } from 'react-bootstrap'\nimport { convertUriFormat } from './uriUtils.js';\n\nexport default function MyPurchases({ marketplace, nft, account }) {\n  const [loading, setLoading] = useState(true)\n  const [purchases, setPurchases] = useState([])\n  const loadPurchasedItems = async () => {\n    // Fetch purchased items from marketplace by quering Offered events with the buyer set as the user\n    const filter =  marketplace.filters.Bought(null,null,null,null,null,account)\n    const results = await marketplace.queryFilter(filter)\n    //Fetch metadata of each nft and add that to listedItem object.\n    const purchases = await Promise.all(results.map(async i => {\n      // fetch arguments from each result\n      i = i.args\n      // get uri url from nft contract\n      const newUri = await nft.tokenURI(i.tokenId)\n      const uri = convertUriFormat(newUri)\n      const response = await fetch(uri)\n      const metadata = await response.json()\n      // get total price of item (item price + fee)\n      const totalPrice = await marketplace.getTotalPrice(i.itemId)\n      // define listed item object\n      const imageUri = convertUriFormat(metadata.image) \n\n      let purchasedItem = {\n        totalPrice,\n        price: i.price,\n        itemId: i.itemId,\n        name: metadata.name,\n        description: metadata.description,\n        image: imageUri\n      }\n      return purchasedItem\n    }))\n    setLoading(false)\n    setPurchases(purchases)\n  }\n  \n  useEffect(() => {\n    loadPurchasedItems()\n  }, [])\n  if (loading) return (\n    <main style={{ padding: \"1rem 0\" }}>\n      <h2>Loading...</h2>\n    </main>\n  )\n  return (\n    <div className=\"flex justify-center\">\n      {purchases.length > 0 ?\n        <div className=\"px-5 container\">\n          <Row xs={1} md={2} lg={4} className=\"g-4 py-5\">\n            {purchases.map((item, idx) => (\n              <Col key={idx} className=\"overflow-hidden\">\n                <Card>\n                  <Card.Img variant=\"top\" src={item.image} />\n                  <Card.Footer>{ethers.utils.formatEther(item.totalPrice)} ETH</Card.Footer>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </div>\n        : (\n          <main style={{ padding: \"1rem 0\" }}>\n            <h2>No purchases</h2>\n          </main>\n        )}\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}