{"ast":null,"code":"var _jsxFileName = \"/home/luis/Escritorio/NFT_marketplace/NFT-market/src/frontend/components/MyListedItems.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { convertUriFormat } from './uriUtils.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction renderSoldItems(items) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sold\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 2,\n      lg: 4,\n      className: \"g-4 py-3\",\n      children: items.map((item, idx) => /*#__PURE__*/_jsxDEV(Col, {\n        className: \"overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: item.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            children: [\"For \", ethers.utils.formatEther(item.totalPrice), \" ETH - Received \", ethers.utils.formatEther(item.price), \" ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\nexport default function MyListedItems(_ref) {\n  _s();\n  let {\n    marketplace,\n    nft,\n    account\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  const [listedItems, setListedItems] = useState([]);\n  const [soldItems, setSoldItems] = useState([]);\n  const loadListedItems = async () => {\n    try {\n      // Load all sold items that the user listed\n      const itemCount = await marketplace.itemCount();\n      let listedItems = [];\n      let soldItems = [];\n      for (let indx = 1; indx <= itemCount; indx++) {\n        const i = await marketplace.items(indx);\n        if (i.seller.toLowerCase() === account) {\n          try {\n            // get uri url from nft contract\n            const newUri = await nft.tokenURI(i.tokenId);\n            const uri = convertUriFormat(newUri);\n            const response = await fetch(uri);\n            const metadata = await response.json();\n            // get total price of item (item price + fee)\n            const totalPrice = await marketplace.getTotalPrice(i.itemId);\n            // define listed item object\n            const imageUri = convertUriFormat(metadata.image);\n            let item = {\n              totalPrice,\n              price: i.price,\n              itemId: i.itemId,\n              name: metadata.name,\n              description: metadata.description,\n              image: imageUri\n            };\n            listedItems.push(item);\n            // Add listed item to sold items array if sold\n            if (i.sold) soldItems.push(item);\n          } catch (error) {\n            console.log('Error fetching metadata:', error);\n          }\n        }\n      }\n      setLoading(false);\n      setListedItems(listedItems);\n      setSoldItems(soldItems);\n    } catch (error) {\n      console.log('Error loading listed items:', error);\n    }\n  };\n  useEffect(() => {\n    loadListedItems();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      style: {\n        padding: '1rem 0'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center\",\n    children: listedItems.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-5 py-3 container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Listed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 2,\n        lg: 4,\n        className: \"g-4 py-3\",\n        children: listedItems.map((item, idx) => /*#__PURE__*/_jsxDEV(Col, {\n          className: \"overflow-hidden\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: item.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              children: [ethers.utils.formatEther(item.totalPrice), \" ETH\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), soldItems.length > 0 && renderSoldItems(soldItems)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"main\", {\n      style: {\n        padding: '1rem 0'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No listed assets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(MyListedItems, \"YKQVEgz6qFQ3U3g/oOtZQBBT2+0=\");\n_c = MyListedItems;\nvar _c;\n$RefreshReg$(_c, \"MyListedItems\");","map":{"version":3,"names":["useState","useEffect","ethers","Row","Col","Card","convertUriFormat","jsxDEV","_jsxDEV","Fragment","_Fragment","renderSoldItems","items","children","fileName","_jsxFileName","lineNumber","columnNumber","xs","md","lg","className","map","item","idx","Img","variant","src","image","Footer","utils","formatEther","totalPrice","price","MyListedItems","_ref","_s","marketplace","nft","account","loading","setLoading","listedItems","setListedItems","soldItems","setSoldItems","loadListedItems","itemCount","indx","i","seller","toLowerCase","newUri","tokenURI","tokenId","uri","response","fetch","metadata","json","getTotalPrice","itemId","imageUri","name","description","push","sold","error","console","log","style","padding","length","_c","$RefreshReg$"],"sources":["/home/luis/Escritorio/NFT_marketplace/NFT-market/src/frontend/components/MyListedItems.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { convertUriFormat } from './uriUtils.js';\n\nfunction renderSoldItems(items) {\n  return (\n    <>\n      <h2>Sold</h2>\n      <Row xs={1} md={2} lg={4} className=\"g-4 py-3\">\n        {items.map((item, idx) => (\n          <Col key={idx} className=\"overflow-hidden\">\n            <Card>\n              <Card.Img variant=\"top\" src={item.image} />\n              <Card.Footer>\n                For {ethers.utils.formatEther(item.totalPrice)} ETH - Received {ethers.utils.formatEther(item.price)} ETH\n              </Card.Footer>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n}\n\nexport default function MyListedItems({ marketplace, nft, account }) {\n  const [loading, setLoading] = useState(true);\n  const [listedItems, setListedItems] = useState([]);\n  const [soldItems, setSoldItems] = useState([]);\n\n  const loadListedItems = async () => {\n    try {\n      // Load all sold items that the user listed\n      const itemCount = await marketplace.itemCount();\n      let listedItems = [];\n      let soldItems = [];\n\n      for (let indx = 1; indx <= itemCount; indx++) {\n        const i = await marketplace.items(indx);\n\n        if (i.seller.toLowerCase() === account) {\n          try {\n            // get uri url from nft contract\n            const newUri = await nft.tokenURI(i.tokenId);\n            const uri = convertUriFormat(newUri);\n            const response = await fetch(uri);\n            const metadata = await response.json();\n            // get total price of item (item price + fee)\n            const totalPrice = await marketplace.getTotalPrice(i.itemId);\n            // define listed item object\n            const imageUri = convertUriFormat(metadata.image);\n\n            let item = {\n              totalPrice,\n              price: i.price,\n              itemId: i.itemId,\n              name: metadata.name,\n              description: metadata.description,\n              image: imageUri\n            };\n\n            listedItems.push(item);\n            // Add listed item to sold items array if sold\n            if (i.sold) soldItems.push(item);\n          } catch (error) {\n            console.log('Error fetching metadata:', error);\n          }\n        }\n      }\n\n      setLoading(false);\n      setListedItems(listedItems);\n      setSoldItems(soldItems);\n    } catch (error) {\n      console.log('Error loading listed items:', error);\n    }\n  };\n\n  useEffect(() => {\n    loadListedItems();\n  }, []);\n\n  if (loading) {\n    return (\n      <main style={{ padding: '1rem 0' }}>\n        <h2>Loading...</h2>\n      </main>\n    );\n  }\n\n  return (\n    <div className=\"flex justify-center\">\n      {listedItems.length > 0 ? (\n        <div className=\"px-5 py-3 container\">\n          <h2>Listed</h2>\n          <Row xs={1} md={2} lg={4} className=\"g-4 py-3\">\n            {listedItems.map((item, idx) => (\n              <Col key={idx} className=\"overflow-hidden\">\n                <Card>\n                  <Card.Img variant=\"top\" src={item.image} />\n                  <Card.Footer>{ethers.utils.formatEther(item.totalPrice)} ETH</Card.Footer>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n          {soldItems.length > 0 && renderSoldItems(soldItems)}\n        </div>\n      ) : (\n        <main style={{ padding: '1rem 0' }}>\n          <h2>No listed assets</h2>\n        </main>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}